{"remainingRequest":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\src\\components\\ExamForm.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\src\\components\\ExamForm.vue","mtime":1558847264000},{"path":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      val1: true,\n      val2: \"\",\n      val3: []\n    };\n  },\n  methods: {\n    handleCheck: function handleCheck() {\n      console.log(this.val3);\n    },\n    handleRadio: function handleRadio() {\n      console.log(this.val2);\n    },\n    handleSwitch: function handleSwitch() {\n      console.log(\"输出开关值:\" + this.val1);\n    }\n  }\n};",{"version":3,"sources":["ExamForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,IADA;AAEA,YAAA,EAFA;AAGA,YAAA;AAHA,KAAA;AAKA,GAPA;AAQA,WAAA;AACA,eADA,yBACA;AACA,cAAA,GAAA,CAAA,KAAA,IAAA;AACA,KAHA;AAIA,eAJA,yBAIA;AACA,cAAA,GAAA,CAAA,KAAA,IAAA;AACA,KANA;AAOA,gBAPA,0BAOA;AACA,cAAA,GAAA,CAAA,WAAA,KAAA,IAAA;AACA;AATA;AARA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n      <h2>表单三个组件</h2>\r\n      <!-- <h3>开关组件</h3>\r\n      <mt-switch v-model=\"val1\">开关</mt-switch>\r\n      <button @click=\"handleSwitch\">读取值</button> -->\r\n      <h3>单选框</h3>\r\n      <mt-radio\r\n       title=\"单选框列表\"\r\n       v-model=\"val2\"   \r\n       :options=\"['赵丽颖','郑爽','迪丽热巴']\"> \r\n       <!-- ['赵丽颖','郑爽','迪丽热巴']放选项内容   :options  有:的时候，选项的个数是按照数组的个数，没有:的时候，选项的个数是按照“ ”中的每一个符号、字符的占位的个数，相当于有多少个字符就有多少个选项，包括[]也算两个选项 -->\r\n      </mt-radio> \r\n      <button @click=\"handleRadio\">选中了一个</button> \r\n      <h3>复选框列表</h3>\r\n      <mt-checklist\r\n       title=\"复选框列表\"\r\n       v-model=\"val3\"\r\n       :options=\"['选项A','选项B','选项C']\">\r\n      </mt-checklist>\r\n      <button @click=\"handleCheck\">读取</button>\r\n      <!-- 复选框中v-model不知进行了双向绑定的作用，并且在没有v-model的时候，即使有option的值，也不能显示选项内容，并且option之前:的作用同单选框一样 而单选框没有v-model的时候，也可以显示option的值，只是不能实现界面发生改变时，将data的值返回更新到模板数据中-->\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n   data(){\r\n     return {\r\n       val1:true,\r\n       val2:\"\",\r\n       val3:[],\r\n     }\r\n   },\r\n   methods: {\r\n     handleCheck(){\r\n       console.log(this.val3);\r\n     },\r\n     handleRadio(){\r\n       console.log(this.val2);\r\n     },\r\n     handleSwitch(){\r\n       console.log(\"输出开关值:\"+this.val1);\r\n     }\r\n   },\r\n}\r\n</script>\r\n"],"sourceRoot":"src\\components"}]}