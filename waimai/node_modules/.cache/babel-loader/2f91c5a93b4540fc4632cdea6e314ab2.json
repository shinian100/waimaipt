{"remainingRequest":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\src\\components\\xz\\cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\src\\components\\xz\\cart.vue","mtime":1560411102000},{"path":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\web xly\\wechat\\vue ui\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: []\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    del: function del() {\n      var _this = this;\n\n      // var state=e.target.checked;\n      console.log(this.list);\n      this.$messagebox({\n        title: \"\",\n        message: \"确定删除选中商品吗\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        if (\"cancel\" == result) {\n          return;\n        } else {\n          //1.创建变量保存空字符串\n          var str = \"\"; //2.创建循环每个数组中元素\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n              var state = item.cd; //3.判断cd==true\n\n              if (state == true) {\n                //4.获取当前id的拼接\n                str += item.id + \",\";\n              }\n            } //解决在点击清空购物车按钮后，再次点击按钮，没有数据上传报的错误\n\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          if (str.length == 0) {\n            _this.$toast(\"请选中要删除的数据\");\n\n            return;\n          } else {\n            str = str.substring(0, str.length - 1);\n            console.log(str); //发送ajax请求\n\n            _this.axios.get(\"delAll\", {\n              params: {\n                ids: str\n              }\n            }).then(function (result) {\n              console.log(result); //刷新\n\n              _this.loadMore(); //  location.reload()同history go(0)一样的效果\n\n            });\n          }\n        }\n      });\n    },\n    loadMore: function loadMore() {\n      var _this2 = this;\n\n      console.log(123); //1.创建url\n\n      var url = \"cart\"; //2.发送ajax请求\n\n      this.axios.get(url, {// params:{\n        //     uid:this.uid   \n        // }\n      }).then(function (result) {\n        //(1)获取数组\n        var rows = result.data.data; //(2)创建循环为数组中元素添cd属性\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = rows[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n            item.cd = false;\n          } //(3)将修改时后数据复制list\n\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        _this2.list = rows; //3.获取服务器购物车数据\n        // console.log(result.data.data)\n        //4.保存\n        // var rows=this.list.concat(result.data.data)\n        // this.list=rows  两种方法皆可\n        // this.list=result.data.data\n      });\n    },\n    //删除指定购物车商品\n    delItem: function delItem(e) {\n      var _this3 = this;\n\n      //删除之前先确认\n      this.$messagebox({\n        title: \"消息\",\n        message: \"是否删除指定数据\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        if (\"cancel\" == result) {\n          return;\n        } else {\n          //1.获取当前商品的id\n          var id = e.target.dataset.id; //dataset放着所有自定义的属性   target指触发的事件\n\n          console.log(id); //2.发送ajax删除商品\n\n          var url = \"del\";\n\n          _this3.axios.get(url, {\n            params: {\n              id: id\n            }\n          }).then(function (result) {\n            console.log(result.data);\n\n            _this3.loadMore();\n          }); //3.刷新\n          //history.go(0)  刷新到当前地址栏页面，不适合在父组件里面刷新子组件页面，会自动返回父组件页面\n          //可以直接在子组件里面直接刷新\n\n        }\n      });\n    },\n    changeState: function changeState(e) {\n      //e事件对象\n      //获取当前全选按钮状态\n      var state = e.target.checked;\n      console.log(state); //获取购物车数组列表\n\n      var arr = this.list; //创建循环\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = arr[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          item.cd = state;\n        } //将当前商品cd状态修改为全选状态\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    },\n    delAll: function delAll() {\n      var _this4 = this;\n\n      this.$messagebox({\n        title: \"确认框\",\n        message: \"是否确认清空购物车\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        if (\"cancel\" == result) {\n          return;\n        } else {\n          //清空购物车中所有商品\n          //1.创建变量保存空字符串\n          var str = \"\"; //2.创建循环遍历数组\n\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = _this4.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var item = _step4.value;\n              str += item.id + \",\";\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          if (str.length == 0) {\n            _this4.$toast(\"请选中要删除的数据\");\n\n            return;\n          }\n\n          console.log(str); //3.获取当前元素id拼接字符串\n          //4.结果：“1,2,3,”\n          //str=str.slice(0,str.length-1)\n\n          str = str.substring(0, str.length - 1);\n          console.log(str); //5.发送ajax请求获取数据\n\n          _this4.axios.get(\"delAll\", {\n            params: {\n              ids: str\n            }\n          }).then(function (result) {\n            console.log(result);\n\n            _this4.loadMore();\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"cart\">\r\n    <!-- 全选按钮 -->\r\n    <div class=\"selectAll\">\r\n        全选\r\n        <input type=\"checkbox\" @change=\"changeState\"/>\r\n    </div>\r\n    <!-- 购物商品信息 -->\r\n    <div class=\"cart-item\" v-for=\"(item,index) of list\" :key=\"index\">\r\n        <div class=\"leftImgTxt\" >\r\n            <input type=\"checkbox\" v-model=\"item.cd\">\r\n            <!-- :checkbox=\"item.cd\"按全选时，下面的全部选中 取消时，全部取消-->\r\n            <img :src=\"'http://127.0.0.1:3000/'+item.img\" alt=\"\" class=\"img\">\r\n            <!-- 图片动态引入，图片要放在服务器端的public下，用express.static引入app.js中 -->\r\n            <div class=\"rightImg\">\r\n                <span>{{item.price}}</span>\r\n                <div>\r\n                <button>-</button>\r\n                <span>{{item.count}}</span>\r\n                <button>+</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <mt-button @click=\"delItem\" :data-id=\"item.id\" style=\"color:#fff;\">删除</mt-button>\r\n    </div>\r\n    <!-- 删除选中商品 -->\r\n    <div class=\"deleteAll\">\r\n        <mt-button @click=\"delAll\" style=\"color:#fff;\">清空购物车</mt-button>\r\n        <mt-button @click=\"del\" style=\"color:#fff;\">删除</mt-button>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n          list:[]\r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore()\r\n    },\r\n    methods:{\r\n        del(){\r\n            // var state=e.target.checked;\r\n           console.log(this.list)\r\n           this.$messagebox({\r\n               title:\"\",\r\n               message:\"确定删除选中商品吗\",\r\n               showConfirmButton:true,\r\n               showCancelButton:true\r\n           }).then(result=>{\r\n               if(\"cancel\"==result){\r\n                   return;\r\n               }else{\r\n\r\n              \r\n           //1.创建变量保存空字符串\r\n            var str=\"\";\r\n            //2.创建循环每个数组中元素\r\n            for(var item of this.list){\r\n                 var state=item.cd\r\n                 //3.判断cd==true\r\n                if(state==true){\r\n                    //4.获取当前id的拼接\r\n                    str+=item.id+\",\";\r\n                }\r\n            }\r\n            //解决在点击清空购物车按钮后，再次点击按钮，没有数据上传报的错误\r\n            if(str.length==0){\r\n                 this.$toast(\"请选中要删除的数据\");\r\n                return;\r\n            }else{\r\n            str=str.substring(0,str.length-1);\r\n            console.log(str)\r\n            //发送ajax请求\r\n            this.axios.get(\"delAll\",{\r\n                params:{\r\n                    ids:str\r\n                }\r\n            }).then(result=>{\r\n                console.log(result)\r\n                //刷新\r\n                 this.loadMore()\r\n                //  location.reload()同history go(0)一样的效果\r\n            })\r\n            }\r\n             }\r\n           })\r\n        },\r\n        loadMore(){\r\n             console.log(123)\r\n            //1.创建url\r\n            var url=\"cart\";\r\n            //2.发送ajax请求\r\n            this.axios.get(url,{\r\n                // params:{\r\n                //     uid:this.uid   \r\n                // }\r\n            }).then(result=>{\r\n                //(1)获取数组\r\n                var rows=result.data.data;\r\n                //(2)创建循环为数组中元素添cd属性\r\n                for(var item of rows){\r\n                    item.cd=false;\r\n                }\r\n                //(3)将修改时后数据复制list\r\n                this.list=rows\r\n                //3.获取服务器购物车数据\r\n                // console.log(result.data.data)\r\n                //4.保存\r\n                // var rows=this.list.concat(result.data.data)\r\n                // this.list=rows  两种方法皆可\r\n                // this.list=result.data.data\r\n            })\r\n        },\r\n        //删除指定购物车商品\r\n        delItem(e){\r\n            //删除之前先确认\r\n            this.$messagebox(\r\n                {title:\"消息\",\r\n                message:\"是否删除指定数据\",\r\n                showConfirmButton:true,\r\n                showCancelButton:true\r\n                }).then(result=>{\r\n                    if(\"cancel\"==result){\r\n                        return;\r\n                    }else{\r\n                 \r\n           //1.获取当前商品的id\r\n             var id=e.target.dataset.id      //dataset放着所有自定义的属性   target指触发的事件\r\n             console.log(id)\r\n           //2.发送ajax删除商品\r\n           var url=\"del\"\r\n           this.axios.get(url,{\r\n               params:{id}\r\n           }).then(result=>{\r\n               console.log(result.data)\r\n               this.loadMore()\r\n           })\r\n           //3.刷新\r\n           //history.go(0)  刷新到当前地址栏页面，不适合在父组件里面刷新子组件页面，会自动返回父组件页面\r\n           \r\n           //可以直接在子组件里面直接刷新\r\n        }       \r\n      })\r\n     },\r\n     changeState(e){//e事件对象\r\n     //获取当前全选按钮状态\r\n        var state=e.target.checked;\r\n        console.log(state)\r\n        //获取购物车数组列表\r\n        var arr=this.list;\r\n        //创建循环\r\n        for(var item of arr){\r\n            item.cd=state\r\n        }\r\n        //将当前商品cd状态修改为全选状态\r\n     },\r\n     delAll(){\r\n         this.$messagebox({\r\n             title:\"确认框\",\r\n             message:\"是否确认清空购物车\",\r\n             showConfirmButton:true,\r\n             showCancelButton:true\r\n         }).then(result=>{\r\n             if(\"cancel\"==result){\r\n                 return;\r\n             }else{\r\n                 //清空购物车中所有商品\r\n         //1.创建变量保存空字符串\r\n         var str=\"\";\r\n         //2.创建循环遍历数组\r\n         for(var item of this.list){\r\n             str+=item.id+\",\";\r\n         }\r\n         if(str.length==0){\r\n            this.$toast(\"请选中要删除的数据\");\r\n            return;\r\n         }\r\n         console.log(str)\r\n         //3.获取当前元素id拼接字符串\r\n         //4.结果：“1,2,3,”\r\n           //str=str.slice(0,str.length-1)\r\n           str=str.substring(0,str.length-1)\r\n         console.log( str)\r\n         //5.发送ajax请求获取数据\r\n         this.axios.get(\"delAll\",{\r\n             params:{\r\n                 ids:str\r\n             }\r\n         }).then(result=>{\r\n               console.log(result)\r\n               this.loadMore();\r\n         })\r\n       }\r\n      })\r\n    }\r\n   }\r\n}\r\n</script>\r\n<style>\r\n    /*最外层商品容器*/\r\n    .cart-item{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        width:100%;\r\n    }\r\n    /*修改左侧图片与文字*/\r\n    .leftImgTxt{\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    /*修改左侧图片*/\r\n    .img{\r\n        width:100px;\r\n        height:100px;\r\n    }\r\n    .rightImg{\r\n        display: flex;\r\n        align-items: center;\r\n        margin-left: 25px;\r\n    }\r\n    .deleteAll{\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\xz"}]}